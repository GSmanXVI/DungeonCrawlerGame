using System;

namespace DungeonCrawlerGame.Map
{
    public static class GameMap
    {
        public static void LoadMap()
        {
            Map = new int[,]
            {
                    {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
                    {1,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,1},
                    {1,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,1},
                    {1,2,2,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,3,3,3,3,0,0,1},
                    {1,2,2,0,0,0,0,0,0,1,4,4,4,1,0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,1},
                    {1,2,0,0,0,0,0,0,0,1,4,4,4,1,0,0,0,0,0,0,3,3,3,2,0,0,0,0,0,1},
                    {1,0,0,0,0,0,0,0,0,1,1,4,1,1,0,0,0,0,0,3,3,3,2,2,0,0,0,0,0,1},
                    {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,2,2,0,0,0,0,0,2,1},
                    {1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,2,2,0,0,0,0,0,2,2,1},
                    {1,2,2,2,0,0,0,0,0,0,3,3,3,3,0,3,3,3,3,0,0,0,0,0,0,0,2,2,2,1},
                    {1,2,2,2,2,0,0,0,0,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,1},
                    {1,3,3,2,2,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,1},
                    {1,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,2,2,1},
                    {1,0,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,2,2,2,2,0,0,0,0,0,0,0,2,1},
                    {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,0,0,0,0,0,0,2,1},
                    {1,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,1},
                    {1,0,0,1,4,4,4,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
                    {1,0,0,1,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,1},
                    {1,0,0,1,4,4,4,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,1},
                    {1,0,0,1,1,4,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,1},
                    {1,0,0,1,4,4,4,4,1,4,4,4,4,1,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,1},
                    {1,0,0,1,4,4,4,4,4,4,4,4,4,1,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,1},
                    {1,0,0,1,4,4,4,4,1,4,4,4,4,1,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,1},
                    {1,2,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,1},
                    {1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,1},
                    {1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,2,1},
                    {1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,2,2,2,1},
                    {1,2,2,2,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,1},
                    {1,2,2,2,2,2,2,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,1},
                    {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
            };
        }

        public static int[,] Map { get; set; }

        public static bool isEmpty(int x, int y)
        {
            return Map[y, x] == 0;
        }

        public static MapCell GetCell(int x, int y)
        {
            throw new NotImplementedException();
        }
    }
}